name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            build-essential \
            curl \
            wget \
            file
            
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          
      - name: Install frontend dependencies
        run: npm ci
        
      - name: Build frontend
        run: npm run build
      
      - name: Lint frontend code
        run: npm run lint
        
      - name: Check Rust code compiles
        run: cd src-tauri && cargo check
        
      - name: Run Rust tests
        run: cd src-tauri && cargo test
        
      - name: Check Rust formatting
        run: cd src-tauri && cargo fmt --check
        
      - name: Run Clippy
        run: cd src-tauri && cargo clippy -- -D warnings

  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'linux'
            os: 'ubuntu-latest'
          # Multi-platform builds (uncomment when CI minutes allow):
          # These are commented out to conserve GitHub Actions minutes during development.
          # To enable cross-platform CI builds, uncomment the platforms below:
          # 
          # - platform: 'macos'
          #   os: 'macos-latest'
          #   # Note: macOS builds use ~10x more CI minutes than Linux
          # 
          # - platform: 'windows'
          #   os: 'windows-latest'
          #   # Note: Windows builds may require additional setup for system dependencies
          #
          # The release.yml workflow already builds for all platforms on tagged releases.
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            build-essential \
            curl \
            wget \
            file
            
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          
      - name: Install frontend dependencies
        run: npm ci
        
      - name: Build frontend
        run: npm run build
        
      - name: Build Tauri app (debug for faster CI)
        run: cd src-tauri && cargo build
        
      # Only build release for tagged versions
      # - name: Build Tauri app (release)
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: cd src-tauri && cargo tauri build
        
      - name: Upload debug artifacts
        uses: actions/upload-artifact@v4
        with:
          name: streamgo-${{ matrix.platform }}-debug
          path: |
            src-tauri/target/debug/streamgo
          retention-days: 7