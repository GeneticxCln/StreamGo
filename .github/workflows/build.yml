name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          
      - name: Install frontend dependencies
        run: npm install
        
      - name: Build frontend
        run: npm run build
        
      - name: Run Rust tests
        run: cd src-tauri && cargo test
        
      - name: Check Rust formatting
        run: cd src-tauri && cargo fmt --check
        
      - name: Run Clippy
        run: cd src-tauri && cargo clippy -- -D warnings

  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos'
            os: 'macos-latest'
          - platform: 'linux'
            os: 'ubuntu-latest'
          - platform: 'windows'
            os: 'windows-latest'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          
      - name: Install frontend dependencies
        run: npm install
        
      - name: Build frontend
        run: npm run build
        
      - name: Build Tauri app
        run: cd src-tauri && cargo tauri build
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: streamgo-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/*/*.*
            !src-tauri/target/release/bundle/*/*.app/
          retention-days: 7